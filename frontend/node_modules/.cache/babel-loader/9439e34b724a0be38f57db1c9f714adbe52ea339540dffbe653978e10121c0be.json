{"ast":null,"code":"import { io } from 'socket.io-client';\nclass WebSocketService {\n  constructor() {\n    this.socket = null;\n    this.listeners = new Map();\n    this.isConnected = false;\n  }\n  connect(url = 'http://localhost:8000') {\n    if (this.socket) {\n      this.disconnect();\n    }\n    this.socket = io(url, {\n      autoConnect: true,\n      reconnection: true,\n      reconnectionAttempts: 5,\n      reconnectionDelay: 1000\n    });\n    this.socket.on('connect', () => {\n      console.log('Connected to PassShield WebSocket');\n      this.isConnected = true;\n      this.emit('connection_status', {\n        connected: true\n      });\n    });\n    this.socket.on('disconnect', () => {\n      console.log('Disconnected from PassShield WebSocket');\n      this.isConnected = false;\n      this.emit('connection_status', {\n        connected: false\n      });\n    });\n    this.socket.on('connect_error', error => {\n      console.error('WebSocket connection error:', error);\n      this.isConnected = false;\n      this.emit('connection_error', {\n        error: error.message\n      });\n    });\n\n    // Forward server events to local listeners\n    this.socket.on('attack_progress', data => {\n      this.emit('attack_progress', data);\n    });\n    this.socket.on('attack_complete', data => {\n      this.emit('attack_complete', data);\n    });\n    this.socket.on('connected', data => {\n      console.log('Server confirmation:', data);\n    });\n    return this.socket;\n  }\n  disconnect() {\n    if (this.socket) {\n      this.socket.disconnect();\n      this.socket = null;\n      this.isConnected = false;\n    }\n  }\n  on(event, callback) {\n    if (!this.listeners.has(event)) {\n      this.listeners.set(event, new Set());\n    }\n    this.listeners.get(event).add(callback);\n  }\n  off(event, callback) {\n    if (this.listeners.has(event)) {\n      this.listeners.get(event).delete(callback);\n    }\n  }\n  emit(event, data) {\n    if (this.listeners.has(event)) {\n      this.listeners.get(event).forEach(callback => {\n        try {\n          callback(data);\n        } catch (error) {\n          console.error(`Error in WebSocket event handler for ${event}:`, error);\n        }\n      });\n    }\n  }\n  sendMessage(event, data) {\n    if (this.socket && this.isConnected) {\n      this.socket.emit(event, data);\n    } else {\n      console.warn('WebSocket not connected, cannot send message');\n    }\n  }\n  getStatus() {\n    this.sendMessage('get_status');\n  }\n}\nexport default new WebSocketService();","map":{"version":3,"names":["io","WebSocketService","constructor","socket","listeners","Map","isConnected","connect","url","disconnect","autoConnect","reconnection","reconnectionAttempts","reconnectionDelay","on","console","log","emit","connected","error","message","data","event","callback","has","set","Set","get","add","off","delete","forEach","sendMessage","warn","getStatus"],"sources":["/Users/hassan/Downloads/coding/Cypher/PassShield/frontend/src/services/websocket.js"],"sourcesContent":["import { io } from 'socket.io-client';\n\nclass WebSocketService {\n  constructor() {\n    this.socket = null;\n    this.listeners = new Map();\n    this.isConnected = false;\n  }\n\n  connect(url = 'http://localhost:8000') {\n    if (this.socket) {\n      this.disconnect();\n    }\n\n    this.socket = io(url, {\n      autoConnect: true,\n      reconnection: true,\n      reconnectionAttempts: 5,\n      reconnectionDelay: 1000,\n    });\n\n    this.socket.on('connect', () => {\n      console.log('Connected to PassShield WebSocket');\n      this.isConnected = true;\n      this.emit('connection_status', { connected: true });\n    });\n\n    this.socket.on('disconnect', () => {\n      console.log('Disconnected from PassShield WebSocket');\n      this.isConnected = false;\n      this.emit('connection_status', { connected: false });\n    });\n\n    this.socket.on('connect_error', (error) => {\n      console.error('WebSocket connection error:', error);\n      this.isConnected = false;\n      this.emit('connection_error', { error: error.message });\n    });\n\n    // Forward server events to local listeners\n    this.socket.on('attack_progress', (data) => {\n      this.emit('attack_progress', data);\n    });\n\n    this.socket.on('attack_complete', (data) => {\n      this.emit('attack_complete', data);\n    });\n\n    this.socket.on('connected', (data) => {\n      console.log('Server confirmation:', data);\n    });\n\n    return this.socket;\n  }\n\n  disconnect() {\n    if (this.socket) {\n      this.socket.disconnect();\n      this.socket = null;\n      this.isConnected = false;\n    }\n  }\n\n  on(event, callback) {\n    if (!this.listeners.has(event)) {\n      this.listeners.set(event, new Set());\n    }\n    this.listeners.get(event).add(callback);\n  }\n\n  off(event, callback) {\n    if (this.listeners.has(event)) {\n      this.listeners.get(event).delete(callback);\n    }\n  }\n\n  emit(event, data) {\n    if (this.listeners.has(event)) {\n      this.listeners.get(event).forEach(callback => {\n        try {\n          callback(data);\n        } catch (error) {\n          console.error(`Error in WebSocket event handler for ${event}:`, error);\n        }\n      });\n    }\n  }\n\n  sendMessage(event, data) {\n    if (this.socket && this.isConnected) {\n      this.socket.emit(event, data);\n    } else {\n      console.warn('WebSocket not connected, cannot send message');\n    }\n  }\n\n  getStatus() {\n    this.sendMessage('get_status');\n  }\n}\n\nexport default new WebSocketService();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}