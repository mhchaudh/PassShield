{"ast":null,"code":"var _jsxFileName = \"/Users/hassan/Downloads/coding/Cypher/PassShield/frontend/src/components/PasswordCracker.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport ApiService from '../services/api';\nimport WebSocketService from '../services/websocket';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst CrackerContainer = styled.div`\n  background: white;\n  border-radius: 12px;\n  padding: 24px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\n  margin-bottom: 24px;\n`;\n_c = CrackerContainer;\nconst SectionTitle = styled.h2`\n  color: #333;\n  margin-bottom: 20px;\n  font-size: 24px;\n  font-weight: 600;\n`;\n_c2 = SectionTitle;\nconst InputGroup = styled.div`\n  margin-bottom: 16px;\n`;\n_c3 = InputGroup;\nconst Label = styled.label`\n  display: block;\n  margin-bottom: 8px;\n  color: #333;\n  font-weight: 500;\n`;\n_c4 = Label;\nconst Input = styled.input`\n  width: 100%;\n  padding: 12px 16px;\n  border: 2px solid #e1e5e9;\n  border-radius: 8px;\n  font-size: 16px;\n  font-family: ${props => props.mono ? \"'Courier New', monospace\" : 'inherit'};\n  transition: border-color 0.3s ease;\n\n  &:focus {\n    outline: none;\n    border-color: #667eea;\n  }\n`;\n_c5 = Input;\nconst Select = styled.select`\n  width: 100%;\n  padding: 12px 16px;\n  border: 2px solid #e1e5e9;\n  border-radius: 8px;\n  font-size: 16px;\n  background: white;\n  transition: border-color 0.3s ease;\n\n  &:focus {\n    outline: none;\n    border-color: #667eea;\n  }\n`;\n_c6 = Select;\nconst ButtonGroup = styled.div`\n  display: flex;\n  gap: 12px;\n  margin: 20px 0;\n  flex-wrap: wrap;\n`;\n_c7 = ButtonGroup;\nconst Button = styled.button`\n  padding: 12px 24px;\n  border: none;\n  border-radius: 8px;\n  font-size: 16px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  \n  ${props => props.primary && `\n    background: #667eea;\n    color: white;\n    &:hover:not(:disabled) {\n      background: #5a6fd8;\n    }\n  `}\n  \n  ${props => props.secondary && `\n    background: #f8f9fa;\n    color: #333;\n    border: 2px solid #e1e5e9;\n    &:hover:not(:disabled) {\n      background: #e9ecef;\n    }\n  `}\n  \n  ${props => props.danger && `\n    background: #ff4757;\n    color: white;\n    &:hover:not(:disabled) {\n      background: #ff3838;\n    }\n  `}\n  \n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n`;\n_c8 = Button;\nconst HashDisplay = styled.div`\n  background: #f8f9fa;\n  border: 2px solid #e1e5e9;\n  border-radius: 8px;\n  padding: 16px;\n  margin: 16px 0;\n`;\n_c9 = HashDisplay;\nconst HashTitle = styled.h4`\n  margin: 0 0 12px 0;\n  color: #333;\n  font-size: 16px;\n`;\n_c0 = HashTitle;\nconst HashValue = styled.div`\n  font-family: 'Courier New', monospace;\n  word-break: break-all;\n  color: #666;\n  background: white;\n  padding: 12px;\n  border-radius: 6px;\n  border: 1px solid #dee2e6;\n`;\n_c1 = HashValue;\nconst StatusPanel = styled.div`\n  background: ${props => {\n  if (props.status === 'running') return '#e3f2fd';\n  if (props.status === 'success') return '#e8f5e8';\n  if (props.status === 'error') return '#ffebee';\n  return '#f8f9fa';\n}};\n  border: 2px solid ${props => {\n  if (props.status === 'running') return '#2196f3';\n  if (props.status === 'success') return '#4caf50';\n  if (props.status === 'error') return '#f44336';\n  return '#e1e5e9';\n}};\n  border-radius: 8px;\n  padding: 20px;\n  margin: 20px 0;\n`;\n_c10 = StatusPanel;\nconst StatusTitle = styled.h3`\n  margin: 0 0 12px 0;\n  color: #333;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n_c11 = StatusTitle;\nconst StatusGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 16px;\n  margin-top: 16px;\n`;\n_c12 = StatusGrid;\nconst StatCard = styled.div`\n  text-align: center;\n  padding: 12px;\n`;\n_c13 = StatCard;\nconst StatValue = styled.div`\n  font-size: 24px;\n  font-weight: 700;\n  color: #333;\n  margin-bottom: 4px;\n`;\n_c14 = StatValue;\nconst StatLabel = styled.div`\n  font-size: 14px;\n  color: #666;\n`;\n_c15 = StatLabel;\nconst ChartContainer = styled.div`\n  height: 300px;\n  margin: 20px 0;\n`;\n_c16 = ChartContainer;\nconst ResultPanel = styled.div`\n  background: #e8f5e8;\n  border: 2px solid #4caf50;\n  border-radius: 8px;\n  padding: 20px;\n  margin: 20px 0;\n  text-align: center;\n`;\n_c17 = ResultPanel;\nconst ResultTitle = styled.h3`\n  color: #2e7d32;\n  margin: 0 0 12px 0;\n`;\n_c18 = ResultTitle;\nconst ResultPassword = styled.div`\n  font-family: 'Courier New', monospace;\n  font-size: 18px;\n  font-weight: 700;\n  color: #1b5e20;\n  background: white;\n  padding: 12px;\n  border-radius: 6px;\n  border: 1px solid #4caf50;\n`;\n_c19 = ResultPassword;\nconst PasswordCracker = () => {\n  _s();\n  var _result$final_status, _result$final_status2;\n  const [testPassword, setTestPassword] = useState('');\n  const [hashType, setHashType] = useState('md5');\n  const [hashes, setHashes] = useState({});\n  const [attackType, setAttackType] = useState('dictionary');\n  const [targetHash, setTargetHash] = useState('');\n  const [isAttacking, setIsAttacking] = useState(false);\n  const [attackStatus, setAttackStatus] = useState(null);\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState(null);\n  const [chartData, setChartData] = useState({\n    labels: [],\n    datasets: [{\n      label: 'Attempts per Second',\n      data: [],\n      borderColor: '#667eea',\n      backgroundColor: 'rgba(102, 126, 234, 0.1)',\n      tension: 0.4\n    }]\n  });\n\n  // Brute force settings\n  const [charset, setCharset] = useState('abcdefghijklmnopqrstuvwxyz0123456789');\n  const [minLength, setMinLength] = useState(1);\n  const [maxLength, setMaxLength] = useState(4);\n  useEffect(() => {\n    // Setup WebSocket listeners\n    WebSocketService.connect();\n    WebSocketService.on('attack_progress', handleAttackProgress);\n    WebSocketService.on('attack_complete', handleAttackComplete);\n    WebSocketService.on('connection_status', handleConnectionStatus);\n    return () => {\n      WebSocketService.off('attack_progress', handleAttackProgress);\n      WebSocketService.off('attack_complete', handleAttackComplete);\n      WebSocketService.off('connection_status', handleConnectionStatus);\n      WebSocketService.disconnect();\n    };\n  }, []);\n  const handleConnectionStatus = status => {\n    if (!status.connected) {\n      setError('Lost connection to server');\n    }\n  };\n  const handleAttackProgress = progress => {\n    setAttackStatus(progress);\n\n    // Update chart data\n    if (progress.attempts_per_second) {\n      setChartData(prevData => {\n        const newLabels = [...prevData.labels, new Date().toLocaleTimeString()];\n        const newData = [...prevData.datasets[0].data, progress.attempts_per_second];\n\n        // Keep only last 20 data points\n        if (newLabels.length > 20) {\n          newLabels.shift();\n          newData.shift();\n        }\n        return {\n          ...prevData,\n          labels: newLabels,\n          datasets: [{\n            ...prevData.datasets[0],\n            data: newData\n          }]\n        };\n      });\n    }\n  };\n  const handleAttackComplete = result => {\n    setIsAttacking(false);\n    setResult(result);\n    if (result.found) {\n      setError(null);\n    }\n  };\n  const generateHashes = async () => {\n    if (!testPassword.trim()) {\n      setError('Please enter a password to hash');\n      return;\n    }\n    setError(null);\n    try {\n      const response = await ApiService.hashPassword(testPassword);\n      setHashes(response.hashes);\n      setTargetHash(response.hashes[hashType] || '');\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  const startAttack = async () => {\n    if (!targetHash.trim()) {\n      setError('Please generate a hash first or enter a target hash');\n      return;\n    }\n    setError(null);\n    setResult(null);\n    setIsAttacking(true);\n    setAttackStatus(null);\n    setChartData({\n      labels: [],\n      datasets: [{\n        label: 'Attempts per Second',\n        data: [],\n        borderColor: '#667eea',\n        backgroundColor: 'rgba(102, 126, 234, 0.1)',\n        tension: 0.4\n      }]\n    });\n    try {\n      if (attackType === 'dictionary') {\n        await ApiService.startDictionaryAttack(targetHash, hashType);\n      } else if (attackType === 'brute_force') {\n        await ApiService.startBruteForceAttack(targetHash, hashType, charset, minLength, maxLength);\n      }\n    } catch (err) {\n      setError(err.message);\n      setIsAttacking(false);\n    }\n  };\n  const stopAttack = async () => {\n    try {\n      await ApiService.stopAttack();\n      setIsAttacking(false);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  const formatTime = seconds => {\n    if (seconds < 60) return `${seconds.toFixed(1)}s`;\n    if (seconds < 3600) return `${(seconds / 60).toFixed(1)}m`;\n    return `${(seconds / 3600).toFixed(1)}h`;\n  };\n  const formatNumber = num => {\n    return new Intl.NumberFormat().format(Math.floor(num));\n  };\n  return /*#__PURE__*/_jsxDEV(CrackerContainer, {\n    children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n      children: \"\\u26A1 Password Cracking Demo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: '#ffebee',\n        border: '2px solid #f44336',\n        borderRadius: '8px',\n        padding: '16px',\n        marginBottom: '20px',\n        color: '#c62828'\n      },\n      children: [\"\\u26A0\\uFE0F \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        children: \"Test Password (to generate hash for cracking)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        value: testPassword,\n        onChange: e => setTestPassword(e.target.value),\n        placeholder: \"Enter a password to test...\",\n        mono: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        children: \"Hash Algorithm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        value: hashType,\n        onChange: e => setHashType(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"md5\",\n          children: \"MD5 (Fast, Insecure)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"sha256\",\n          children: \"SHA-256 (Fast, Better)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"bcrypt\",\n          children: \"bcrypt (Slow, Secure)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"argon2\",\n          children: \"Argon2 (Slow, Very Secure)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        primary: true,\n        onClick: generateHashes,\n        disabled: isAttacking,\n        children: \"\\uD83D\\uDD10 Generate Hashes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 7\n    }, this), Object.keys(hashes).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          color: '#333',\n          marginBottom: '16px'\n        },\n        children: \"Generated Hashes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 11\n      }, this), Object.entries(hashes).map(([type, hash]) => /*#__PURE__*/_jsxDEV(HashDisplay, {\n        children: [/*#__PURE__*/_jsxDEV(HashTitle, {\n          children: type.toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(HashValue, {\n          children: hash.startsWith('Error:') ? hash : hash\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 15\n        }, this)]\n      }, type, true, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        children: \"Target Hash (or use generated hash above)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        value: targetHash,\n        onChange: e => setTargetHash(e.target.value),\n        placeholder: \"Enter hash to crack...\",\n        mono: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        children: \"Attack Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        value: attackType,\n        onChange: e => setAttackType(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"dictionary\",\n          children: \"Dictionary Attack\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"brute_force\",\n          children: \"Brute Force Attack\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 7\n    }, this), attackType === 'brute_force' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Character Set\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          value: charset,\n          onChange: e => setCharset(e.target.value),\n          placeholder: \"Characters to use in brute force...\",\n          mono: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: '1fr 1fr',\n          gap: '16px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Min Length\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            min: \"1\",\n            max: \"6\",\n            value: minLength,\n            onChange: e => setMinLength(parseInt(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Max Length (Limited to 6 for safety)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            min: \"1\",\n            max: \"6\",\n            value: maxLength,\n            onChange: e => setMaxLength(parseInt(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        primary: true,\n        onClick: startAttack,\n        disabled: isAttacking || !targetHash.trim(),\n        children: [\"\\uD83D\\uDE80 Start \", attackType === 'dictionary' ? 'Dictionary' : 'Brute Force', \" Attack\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        danger: true,\n        onClick: stopAttack,\n        disabled: !isAttacking,\n        children: \"\\uD83D\\uDED1 Stop Attack\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 7\n    }, this), isAttacking && attackStatus && /*#__PURE__*/_jsxDEV(StatusPanel, {\n      status: \"running\",\n      children: [/*#__PURE__*/_jsxDEV(StatusTitle, {\n        children: \"\\u26A1 Attack in Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StatusGrid, {\n        children: [/*#__PURE__*/_jsxDEV(StatCard, {\n          children: [/*#__PURE__*/_jsxDEV(StatValue, {\n            children: formatNumber(attackStatus.attempts || 0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StatLabel, {\n            children: \"Attempts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StatCard, {\n          children: [/*#__PURE__*/_jsxDEV(StatValue, {\n            children: formatNumber(attackStatus.attempts_per_second || 0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StatLabel, {\n            children: \"Attempts/sec\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StatCard, {\n          children: [/*#__PURE__*/_jsxDEV(StatValue, {\n            children: formatTime(attackStatus.time_elapsed || 0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StatLabel, {\n            children: \"Time Elapsed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StatCard, {\n          children: [/*#__PURE__*/_jsxDEV(StatValue, {\n            children: attackStatus.current_password || 'N/A'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StatLabel, {\n            children: \"Current Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 9\n    }, this), chartData.labels.length > 0 && /*#__PURE__*/_jsxDEV(ChartContainer, {\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData,\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          plugins: {\n            legend: {\n              position: 'top'\n            },\n            title: {\n              display: true,\n              text: 'Attack Speed Over Time'\n            }\n          },\n          scales: {\n            y: {\n              beginAtZero: true,\n              title: {\n                display: true,\n                text: 'Attempts per Second'\n              }\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 9\n    }, this), result && result.found && /*#__PURE__*/_jsxDEV(ResultPanel, {\n      children: [/*#__PURE__*/_jsxDEV(ResultTitle, {\n        children: \"\\uD83C\\uDF89 Password Cracked!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ResultPassword, {\n        children: [\"\\\"\", result.password, \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '12px',\n          color: '#2e7d32'\n        },\n        children: [\"Found in \", formatNumber(((_result$final_status = result.final_status) === null || _result$final_status === void 0 ? void 0 : _result$final_status.attempts) || 0), \" attempts (\", formatTime(((_result$final_status2 = result.final_status) === null || _result$final_status2 === void 0 ? void 0 : _result$final_status2.time_elapsed) || 0), \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 576,\n      columnNumber: 9\n    }, this), result && !result.found && !isAttacking && /*#__PURE__*/_jsxDEV(StatusPanel, {\n      status: \"error\",\n      children: [/*#__PURE__*/_jsxDEV(StatusTitle, {\n        children: \"\\u274C Attack Complete - Password Not Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"The password was not found using the \", attackType, \" attack method.\", result.final_status && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '12px'\n          },\n          children: [\"Attempted \", formatNumber(result.final_status.attempts), \" passwords in \", formatTime(result.final_status.time_elapsed), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 392,\n    columnNumber: 5\n  }, this);\n};\n_s(PasswordCracker, \"2wXKscE/18BaLobqEJXmoqJCigI=\");\n_c20 = PasswordCracker;\nexport default PasswordCracker;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20;\n$RefreshReg$(_c, \"CrackerContainer\");\n$RefreshReg$(_c2, \"SectionTitle\");\n$RefreshReg$(_c3, \"InputGroup\");\n$RefreshReg$(_c4, \"Label\");\n$RefreshReg$(_c5, \"Input\");\n$RefreshReg$(_c6, \"Select\");\n$RefreshReg$(_c7, \"ButtonGroup\");\n$RefreshReg$(_c8, \"Button\");\n$RefreshReg$(_c9, \"HashDisplay\");\n$RefreshReg$(_c0, \"HashTitle\");\n$RefreshReg$(_c1, \"HashValue\");\n$RefreshReg$(_c10, \"StatusPanel\");\n$RefreshReg$(_c11, \"StatusTitle\");\n$RefreshReg$(_c12, \"StatusGrid\");\n$RefreshReg$(_c13, \"StatCard\");\n$RefreshReg$(_c14, \"StatValue\");\n$RefreshReg$(_c15, \"StatLabel\");\n$RefreshReg$(_c16, \"ChartContainer\");\n$RefreshReg$(_c17, \"ResultPanel\");\n$RefreshReg$(_c18, \"ResultTitle\");\n$RefreshReg$(_c19, \"ResultPassword\");\n$RefreshReg$(_c20, \"PasswordCracker\");","map":{"version":3,"names":["React","useState","useEffect","styled","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","ApiService","WebSocketService","jsxDEV","_jsxDEV","Fragment","_Fragment","register","CrackerContainer","div","_c","SectionTitle","h2","_c2","InputGroup","_c3","Label","label","_c4","Input","input","props","mono","_c5","Select","select","_c6","ButtonGroup","_c7","Button","button","primary","secondary","danger","_c8","HashDisplay","_c9","HashTitle","h4","_c0","HashValue","_c1","StatusPanel","status","_c10","StatusTitle","h3","_c11","StatusGrid","_c12","StatCard","_c13","StatValue","_c14","StatLabel","_c15","ChartContainer","_c16","ResultPanel","_c17","ResultTitle","_c18","ResultPassword","_c19","PasswordCracker","_s","_result$final_status","_result$final_status2","testPassword","setTestPassword","hashType","setHashType","hashes","setHashes","attackType","setAttackType","targetHash","setTargetHash","isAttacking","setIsAttacking","attackStatus","setAttackStatus","result","setResult","error","setError","chartData","setChartData","labels","datasets","data","borderColor","backgroundColor","tension","charset","setCharset","minLength","setMinLength","maxLength","setMaxLength","connect","on","handleAttackProgress","handleAttackComplete","handleConnectionStatus","off","disconnect","connected","progress","attempts_per_second","prevData","newLabels","Date","toLocaleTimeString","newData","length","shift","found","generateHashes","trim","response","hashPassword","err","message","startAttack","startDictionaryAttack","startBruteForceAttack","stopAttack","formatTime","seconds","toFixed","formatNumber","num","Intl","NumberFormat","format","Math","floor","children","fileName","_jsxFileName","lineNumber","columnNumber","style","background","border","borderRadius","padding","marginBottom","color","type","value","onChange","e","target","placeholder","onClick","disabled","Object","keys","entries","map","hash","toUpperCase","startsWith","display","gridTemplateColumns","gap","min","max","parseInt","attempts","time_elapsed","current_password","options","responsive","maintainAspectRatio","plugins","legend","position","title","text","scales","y","beginAtZero","password","marginTop","final_status","_c20","$RefreshReg$"],"sources":["/Users/hassan/Downloads/coding/Cypher/PassShield/frontend/src/components/PasswordCracker.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport ApiService from '../services/api';\nimport WebSocketService from '../services/websocket';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst CrackerContainer = styled.div`\n  background: white;\n  border-radius: 12px;\n  padding: 24px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\n  margin-bottom: 24px;\n`;\n\nconst SectionTitle = styled.h2`\n  color: #333;\n  margin-bottom: 20px;\n  font-size: 24px;\n  font-weight: 600;\n`;\n\nconst InputGroup = styled.div`\n  margin-bottom: 16px;\n`;\n\nconst Label = styled.label`\n  display: block;\n  margin-bottom: 8px;\n  color: #333;\n  font-weight: 500;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  padding: 12px 16px;\n  border: 2px solid #e1e5e9;\n  border-radius: 8px;\n  font-size: 16px;\n  font-family: ${props => props.mono ? \"'Courier New', monospace\" : 'inherit'};\n  transition: border-color 0.3s ease;\n\n  &:focus {\n    outline: none;\n    border-color: #667eea;\n  }\n`;\n\nconst Select = styled.select`\n  width: 100%;\n  padding: 12px 16px;\n  border: 2px solid #e1e5e9;\n  border-radius: 8px;\n  font-size: 16px;\n  background: white;\n  transition: border-color 0.3s ease;\n\n  &:focus {\n    outline: none;\n    border-color: #667eea;\n  }\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  gap: 12px;\n  margin: 20px 0;\n  flex-wrap: wrap;\n`;\n\nconst Button = styled.button`\n  padding: 12px 24px;\n  border: none;\n  border-radius: 8px;\n  font-size: 16px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  \n  ${props => props.primary && `\n    background: #667eea;\n    color: white;\n    &:hover:not(:disabled) {\n      background: #5a6fd8;\n    }\n  `}\n  \n  ${props => props.secondary && `\n    background: #f8f9fa;\n    color: #333;\n    border: 2px solid #e1e5e9;\n    &:hover:not(:disabled) {\n      background: #e9ecef;\n    }\n  `}\n  \n  ${props => props.danger && `\n    background: #ff4757;\n    color: white;\n    &:hover:not(:disabled) {\n      background: #ff3838;\n    }\n  `}\n  \n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n`;\n\nconst HashDisplay = styled.div`\n  background: #f8f9fa;\n  border: 2px solid #e1e5e9;\n  border-radius: 8px;\n  padding: 16px;\n  margin: 16px 0;\n`;\n\nconst HashTitle = styled.h4`\n  margin: 0 0 12px 0;\n  color: #333;\n  font-size: 16px;\n`;\n\nconst HashValue = styled.div`\n  font-family: 'Courier New', monospace;\n  word-break: break-all;\n  color: #666;\n  background: white;\n  padding: 12px;\n  border-radius: 6px;\n  border: 1px solid #dee2e6;\n`;\n\nconst StatusPanel = styled.div`\n  background: ${props => {\n    if (props.status === 'running') return '#e3f2fd';\n    if (props.status === 'success') return '#e8f5e8';\n    if (props.status === 'error') return '#ffebee';\n    return '#f8f9fa';\n  }};\n  border: 2px solid ${props => {\n    if (props.status === 'running') return '#2196f3';\n    if (props.status === 'success') return '#4caf50';\n    if (props.status === 'error') return '#f44336';\n    return '#e1e5e9';\n  }};\n  border-radius: 8px;\n  padding: 20px;\n  margin: 20px 0;\n`;\n\nconst StatusTitle = styled.h3`\n  margin: 0 0 12px 0;\n  color: #333;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nconst StatusGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 16px;\n  margin-top: 16px;\n`;\n\nconst StatCard = styled.div`\n  text-align: center;\n  padding: 12px;\n`;\n\nconst StatValue = styled.div`\n  font-size: 24px;\n  font-weight: 700;\n  color: #333;\n  margin-bottom: 4px;\n`;\n\nconst StatLabel = styled.div`\n  font-size: 14px;\n  color: #666;\n`;\n\nconst ChartContainer = styled.div`\n  height: 300px;\n  margin: 20px 0;\n`;\n\nconst ResultPanel = styled.div`\n  background: #e8f5e8;\n  border: 2px solid #4caf50;\n  border-radius: 8px;\n  padding: 20px;\n  margin: 20px 0;\n  text-align: center;\n`;\n\nconst ResultTitle = styled.h3`\n  color: #2e7d32;\n  margin: 0 0 12px 0;\n`;\n\nconst ResultPassword = styled.div`\n  font-family: 'Courier New', monospace;\n  font-size: 18px;\n  font-weight: 700;\n  color: #1b5e20;\n  background: white;\n  padding: 12px;\n  border-radius: 6px;\n  border: 1px solid #4caf50;\n`;\n\nconst PasswordCracker = () => {\n  const [testPassword, setTestPassword] = useState('');\n  const [hashType, setHashType] = useState('md5');\n  const [hashes, setHashes] = useState({});\n  const [attackType, setAttackType] = useState('dictionary');\n  const [targetHash, setTargetHash] = useState('');\n  const [isAttacking, setIsAttacking] = useState(false);\n  const [attackStatus, setAttackStatus] = useState(null);\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState(null);\n  const [chartData, setChartData] = useState({\n    labels: [],\n    datasets: [{\n      label: 'Attempts per Second',\n      data: [],\n      borderColor: '#667eea',\n      backgroundColor: 'rgba(102, 126, 234, 0.1)',\n      tension: 0.4,\n    }]\n  });\n\n  // Brute force settings\n  const [charset, setCharset] = useState('abcdefghijklmnopqrstuvwxyz0123456789');\n  const [minLength, setMinLength] = useState(1);\n  const [maxLength, setMaxLength] = useState(4);\n\n  useEffect(() => {\n    // Setup WebSocket listeners\n    WebSocketService.connect();\n\n    WebSocketService.on('attack_progress', handleAttackProgress);\n    WebSocketService.on('attack_complete', handleAttackComplete);\n    WebSocketService.on('connection_status', handleConnectionStatus);\n\n    return () => {\n      WebSocketService.off('attack_progress', handleAttackProgress);\n      WebSocketService.off('attack_complete', handleAttackComplete);\n      WebSocketService.off('connection_status', handleConnectionStatus);\n      WebSocketService.disconnect();\n    };\n  }, []);\n\n  const handleConnectionStatus = (status) => {\n    if (!status.connected) {\n      setError('Lost connection to server');\n    }\n  };\n\n  const handleAttackProgress = (progress) => {\n    setAttackStatus(progress);\n    \n    // Update chart data\n    if (progress.attempts_per_second) {\n      setChartData(prevData => {\n        const newLabels = [...prevData.labels, new Date().toLocaleTimeString()];\n        const newData = [...prevData.datasets[0].data, progress.attempts_per_second];\n        \n        // Keep only last 20 data points\n        if (newLabels.length > 20) {\n          newLabels.shift();\n          newData.shift();\n        }\n        \n        return {\n          ...prevData,\n          labels: newLabels,\n          datasets: [{\n            ...prevData.datasets[0],\n            data: newData,\n          }]\n        };\n      });\n    }\n  };\n\n  const handleAttackComplete = (result) => {\n    setIsAttacking(false);\n    setResult(result);\n    if (result.found) {\n      setError(null);\n    }\n  };\n\n  const generateHashes = async () => {\n    if (!testPassword.trim()) {\n      setError('Please enter a password to hash');\n      return;\n    }\n\n    setError(null);\n    try {\n      const response = await ApiService.hashPassword(testPassword);\n      setHashes(response.hashes);\n      setTargetHash(response.hashes[hashType] || '');\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const startAttack = async () => {\n    if (!targetHash.trim()) {\n      setError('Please generate a hash first or enter a target hash');\n      return;\n    }\n\n    setError(null);\n    setResult(null);\n    setIsAttacking(true);\n    setAttackStatus(null);\n    setChartData({\n      labels: [],\n      datasets: [{\n        label: 'Attempts per Second',\n        data: [],\n        borderColor: '#667eea',\n        backgroundColor: 'rgba(102, 126, 234, 0.1)',\n        tension: 0.4,\n      }]\n    });\n\n    try {\n      if (attackType === 'dictionary') {\n        await ApiService.startDictionaryAttack(targetHash, hashType);\n      } else if (attackType === 'brute_force') {\n        await ApiService.startBruteForceAttack(\n          targetHash,\n          hashType,\n          charset,\n          minLength,\n          maxLength\n        );\n      }\n    } catch (err) {\n      setError(err.message);\n      setIsAttacking(false);\n    }\n  };\n\n  const stopAttack = async () => {\n    try {\n      await ApiService.stopAttack();\n      setIsAttacking(false);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const formatTime = (seconds) => {\n    if (seconds < 60) return `${seconds.toFixed(1)}s`;\n    if (seconds < 3600) return `${(seconds / 60).toFixed(1)}m`;\n    return `${(seconds / 3600).toFixed(1)}h`;\n  };\n\n  const formatNumber = (num) => {\n    return new Intl.NumberFormat().format(Math.floor(num));\n  };\n\n  return (\n    <CrackerContainer>\n      <SectionTitle>⚡ Password Cracking Demo</SectionTitle>\n\n      {error && (\n        <div style={{ \n          background: '#ffebee', \n          border: '2px solid #f44336', \n          borderRadius: '8px', \n          padding: '16px', \n          marginBottom: '20px',\n          color: '#c62828'\n        }}>\n          ⚠️ {error}\n        </div>\n      )}\n\n      <InputGroup>\n        <Label>Test Password (to generate hash for cracking)</Label>\n        <Input\n          type=\"text\"\n          value={testPassword}\n          onChange={(e) => setTestPassword(e.target.value)}\n          placeholder=\"Enter a password to test...\"\n          mono\n        />\n      </InputGroup>\n\n      <InputGroup>\n        <Label>Hash Algorithm</Label>\n        <Select value={hashType} onChange={(e) => setHashType(e.target.value)}>\n          <option value=\"md5\">MD5 (Fast, Insecure)</option>\n          <option value=\"sha256\">SHA-256 (Fast, Better)</option>\n          <option value=\"bcrypt\">bcrypt (Slow, Secure)</option>\n          <option value=\"argon2\">Argon2 (Slow, Very Secure)</option>\n        </Select>\n      </InputGroup>\n\n      <ButtonGroup>\n        <Button primary onClick={generateHashes} disabled={isAttacking}>\n          🔐 Generate Hashes\n        </Button>\n      </ButtonGroup>\n\n      {Object.keys(hashes).length > 0 && (\n        <div>\n          <h3 style={{ color: '#333', marginBottom: '16px' }}>Generated Hashes</h3>\n          {Object.entries(hashes).map(([type, hash]) => (\n            <HashDisplay key={type}>\n              <HashTitle>{type.toUpperCase()}</HashTitle>\n              <HashValue>{hash.startsWith('Error:') ? hash : hash}</HashValue>\n            </HashDisplay>\n          ))}\n        </div>\n      )}\n\n      <InputGroup>\n        <Label>Target Hash (or use generated hash above)</Label>\n        <Input\n          type=\"text\"\n          value={targetHash}\n          onChange={(e) => setTargetHash(e.target.value)}\n          placeholder=\"Enter hash to crack...\"\n          mono\n        />\n      </InputGroup>\n\n      <InputGroup>\n        <Label>Attack Type</Label>\n        <Select value={attackType} onChange={(e) => setAttackType(e.target.value)}>\n          <option value=\"dictionary\">Dictionary Attack</option>\n          <option value=\"brute_force\">Brute Force Attack</option>\n        </Select>\n      </InputGroup>\n\n      {attackType === 'brute_force' && (\n        <>\n          <InputGroup>\n            <Label>Character Set</Label>\n            <Input\n              type=\"text\"\n              value={charset}\n              onChange={(e) => setCharset(e.target.value)}\n              placeholder=\"Characters to use in brute force...\"\n              mono\n            />\n          </InputGroup>\n          \n          <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '16px' }}>\n            <InputGroup>\n              <Label>Min Length</Label>\n              <Input\n                type=\"number\"\n                min=\"1\"\n                max=\"6\"\n                value={minLength}\n                onChange={(e) => setMinLength(parseInt(e.target.value))}\n              />\n            </InputGroup>\n            \n            <InputGroup>\n              <Label>Max Length (Limited to 6 for safety)</Label>\n              <Input\n                type=\"number\"\n                min=\"1\"\n                max=\"6\"\n                value={maxLength}\n                onChange={(e) => setMaxLength(parseInt(e.target.value))}\n              />\n            </InputGroup>\n          </div>\n        </>\n      )}\n\n      <ButtonGroup>\n        <Button \n          primary \n          onClick={startAttack} \n          disabled={isAttacking || !targetHash.trim()}\n        >\n          🚀 Start {attackType === 'dictionary' ? 'Dictionary' : 'Brute Force'} Attack\n        </Button>\n        \n        <Button danger onClick={stopAttack} disabled={!isAttacking}>\n          🛑 Stop Attack\n        </Button>\n      </ButtonGroup>\n\n      {isAttacking && attackStatus && (\n        <StatusPanel status=\"running\">\n          <StatusTitle>\n            ⚡ Attack in Progress\n          </StatusTitle>\n          <StatusGrid>\n            <StatCard>\n              <StatValue>{formatNumber(attackStatus.attempts || 0)}</StatValue>\n              <StatLabel>Attempts</StatLabel>\n            </StatCard>\n            <StatCard>\n              <StatValue>{formatNumber(attackStatus.attempts_per_second || 0)}</StatValue>\n              <StatLabel>Attempts/sec</StatLabel>\n            </StatCard>\n            <StatCard>\n              <StatValue>{formatTime(attackStatus.time_elapsed || 0)}</StatValue>\n              <StatLabel>Time Elapsed</StatLabel>\n            </StatCard>\n            <StatCard>\n              <StatValue>{attackStatus.current_password || 'N/A'}</StatValue>\n              <StatLabel>Current Password</StatLabel>\n            </StatCard>\n          </StatusGrid>\n        </StatusPanel>\n      )}\n\n      {chartData.labels.length > 0 && (\n        <ChartContainer>\n          <Line \n            data={chartData} \n            options={{\n              responsive: true,\n              maintainAspectRatio: false,\n              plugins: {\n                legend: {\n                  position: 'top',\n                },\n                title: {\n                  display: true,\n                  text: 'Attack Speed Over Time'\n                }\n              },\n              scales: {\n                y: {\n                  beginAtZero: true,\n                  title: {\n                    display: true,\n                    text: 'Attempts per Second'\n                  }\n                }\n              }\n            }} \n          />\n        </ChartContainer>\n      )}\n\n      {result && result.found && (\n        <ResultPanel>\n          <ResultTitle>🎉 Password Cracked!</ResultTitle>\n          <ResultPassword>\"{result.password}\"</ResultPassword>\n          <div style={{ marginTop: '12px', color: '#2e7d32' }}>\n            Found in {formatNumber(result.final_status?.attempts || 0)} attempts \n            ({formatTime(result.final_status?.time_elapsed || 0)})\n          </div>\n        </ResultPanel>\n      )}\n\n      {result && !result.found && !isAttacking && (\n        <StatusPanel status=\"error\">\n          <StatusTitle>❌ Attack Complete - Password Not Found</StatusTitle>\n          <div>\n            The password was not found using the {attackType} attack method.\n            {result.final_status && (\n              <div style={{ marginTop: '12px' }}>\n                Attempted {formatNumber(result.final_status.attempts)} passwords \n                in {formatTime(result.final_status.time_elapsed)}.\n              </div>\n            )}\n          </div>\n        </StatusPanel>\n      )}\n    </CrackerContainer>\n  );\n};\n\nexport default PasswordCracker;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}